{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@popetech/ngx-table/lib/utils/hide.ts","ng://@popetech/ngx-table/lib/utils/min.ts","ng://@popetech/ngx-table/lib/utils/px.ts","ng://@popetech/ngx-table/lib/tools/data-table-resource.ts","ng://@popetech/ngx-table/lib/directives/column/column.directive.ts","ng://@popetech/ngx-table/lib/components/row/row.component.html","ng://@popetech/ngx-table/lib/components/row/row.component.ts","ng://@popetech/ngx-table/lib/types/default-translations.type.ts","ng://@popetech/ngx-table/lib/components/table/table.component.html","ng://@popetech/ngx-table/lib/components/table/table.component.ts","ng://@popetech/ngx-table/lib/utils/drag.ts","ng://@popetech/ngx-table/lib/components/header/header.component.html","ng://@popetech/ngx-table/lib/components/header/header.component.ts","ng://@popetech/ngx-table/lib/components/pagination/pagination.component.html","ng://@popetech/ngx-table/lib/components/pagination/pagination.component.ts","ng://@popetech/ngx-table/lib/ngx-table.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","isBlank","obj","HideDirective","_elementRef","renderer","_prevCondition","defineProperty","newCondition","initDisplayStyle","setStyle","nativeElement","_displayStyle","undefined","displayStyle","style","display","core","ElementRef","Renderer2","selectors","inputs","hide","MinPipe","transform","value","args","Math","min","pure","PixelConverter","DataTableResource","items","query","params","filter","result","slice","sortBy","sort","a","b","localeCompare","sortAsc","reverse","offset","limit","Promise","resolve","reject","setTimeout","count","_this","DataTableColumnDirective","styleClassObject","sortable","resizable","visible","getCellColor","row","index","cellColors","item","ngOnInit","_initCellClass","styleClass","property","test","replace","_a","contentQueries","rf","ctx","dirIndex","i0.ɵɵelement","i0.ɵɵproperty","_c1$1","column_r138","ctx_r142","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵadvance","ctx_r147","i0.ɵɵattribute","_c2","ctx_r137","DataTableRowComponent","dataTable","elementRef","_listeners","selectedChange","EventEmitter","_selected","selected","emit","pagination","displayParams","getTooltip","rowTooltip","_this_1","rowClick","observers","push","listen","event","rowClicked","rowDoubleClick","rowDoubleClicked","ngOnDestroy","forEach","fn","forwardRef","DataTableComponent","outputs","attrs","_c0$1","decls","vars","consts","template","i0.ɵɵlistener","$event","stopPropagation","i0.ɵɵclassProp","selectOnRowClick","labels","expandRow","primaryColumn","displayIndex","selectRow","defaultTranslations","headerReload","headerColumnSelector","headerColumnSelectorAdded","headerColumnSelectorRemoved","indexColumn","selectColumn","selectAllRows","expandColumn","sortedAscending","sortedDescending","sortAscending","sortDescending","paginationLimit","paginationText","paginationTotalPages","firstPage","prevPage","pageNumberLabel","pageNumber","pageNumberNofM","nextPage","lastPage","loadingText","loadedText","column_r96","header","_c1$2","_c2$1","ctx_r103","ctx_r99","id","i_r97","ctx_r117","index_r127","i0.ɵɵtext","i0.ɵɵtextInterpolate","index_r133","ctx_r131","nextId","_items","title","showTitle","indexColumnHeader","multiSelect","substituteRows","expandableRows","autoReload","showReloading","pageLimits","reload","headerClick","cellClick","selectedRowsChange","visibleColumnsChange","_displayParams","subject","Subject","notifier","selectedRows","_selectAllCheckbox","_resizeInProgress","resizeLimit","_reloading","_sortAsc","_offset","_limit","_onReloadFinished","_itemCount","next","val","_sortBy","itemCount","floor","ceil","asc","_initDefaultValues","_initDefaultClickEvents","_updateDisplayParams","indexOf","reloadItems","notifier$","subscribe","_notify","subject$","pipe","debounceTime","indexColumnVisible","selectColumnVisible","expandColumnVisible","tableEvent","sortColumn","column","reloading","_getRemoteParameters","headerClicked","preventDefault","cellClicked","ascending","columns","toArray","getRowColor","rowColors","_onSelectAllChanged","rows","onRowSelectChanged","splice","selectedRow","row_","Array","from","resizeColumnStart","columnElement","startOffset","offsetWidth","pageX","move","up","startX","startY","pageY","x","y","moved","mouseMoveHandler","evt","dx","dy","document","addEventListener","mouseUpHandler","removeEventListener","drag","moveEvent","_isResizeInLimit","width","nextElementSibling","ngAfterContentInit","first","loading","reloadNotification","paginationNotification","col","find","sortNotification","unsubscribe","i0.ɵɵclassMap","selectAllCheckbox","_r158","onChange","_r161","_r164","_r171","DataTableHeaderComponent","elemRef","columnSelectorOpen","onClickHandler","contains","target","onKeyUpHandler","keyCode","isChecked","checked","interpolateParams","column_name","parentElement","textContent","trim","columnSelectorNotification","hostBindings","DataTablePaginationComponent","pageBack","pageInput","focus","pageForward","pageFirst","pageLast","maxPage","page","validate","newValue","viewQuery","_r177","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate2","NgxTableModule","forRoot","ngModule","providers","imports","CommonModule","FormsModule","declarations","exports","common","NgClass","NgComponentOutlet","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgPlural","NgPluralCase","forms","NgSelectOption","DefaultValueAccessor","NumberValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","SelectMultipleControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","CheckboxRequiredValidator","EmailValidator","NgModel","NgModelGroup","NgForm","AsyncPipe","UpperCasePipe","LowerCasePipe","JsonPipe","SlicePipe","DecimalPipe","PercentPipe","TitleCasePipe","CurrencyPipe","DatePipe","I18nPluralPipe","I18nSelectPipe","KeyValuePipe"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2\n} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[] = []): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n","import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n","import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  private styleClassObject = {}; // for [ngClass]\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n\n  @ContentChild('dataTableCell', { static: true }) cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader', { static: true }) headerTemplate: ElementRef;\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n","<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  templateUrl: './row.component.html',\n  styleUrls: ['./row.component.css']\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n\n  expanded: boolean;\n\n  private _listeners = [];\n\n  // row selection:\n  private _selected: boolean;\n\n  @Output() selectedChange = new EventEmitter();\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n","import { DataTableTranslations } from './data-table-translations.type';\n\nexport const defaultTranslations: DataTableTranslations = {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded'\n};\n","<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n\n  <div class=\"data-table-box\" [class]=\"wrapperClass\">\n    <table class=\"table data-table\" [id]=\"id\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <input [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"\n                 [attr.aria-label]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChildren\n} from '@angular/core';\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\nimport { DataTableRowComponent } from '../row/row.component';\nimport { DataTableParams } from '../../types/data-table-params.type';\nimport { RowCallback } from '../../types/row-callback.type';\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\nimport { defaultTranslations } from '../../types/default-translations.type';\nimport { drag } from '../../utils/drag';\n\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { debounceTime, tap } from 'rxjs/operators';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\n\n  private _items: any[] = [];\n  private _itemCount;\n\n  @Input() wrapperClass;\n\n  @Input()\n  get items(): any[] {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    // no need to call notifier.next() because _onReloadFinished()\n    // will change reloaded value causing notifier.next() to be called implicitly.\n    this._onReloadFinished();\n  }\n\n\n  @Input()\n  get itemCount(): number {\n    return this._itemCount;\n  }\n\n  set itemCount(count: number) {\n    this._itemCount = count;\n    this.notifier.next();\n  }\n\n  // UI components:\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\n  @ContentChild('dataTableExpand', { static: true }) expandTemplate: TemplateRef<any>;\n\n  // One-time optional bindings with default values:\n  @Input() title = '';\n  @Input() showTitle = true;\n  @Input() header = true;\n  @Input() pagination = true;\n  @Input() indexColumn = true;\n  @Input() indexColumnHeader = '';\n  @Input() rowColors: RowCallback;\n  @Input() rowTooltip: RowCallback;\n  @Input() selectColumn = false;\n  @Input() multiSelect = true;\n  @Input() substituteRows = true;\n  @Input() expandableRows = false;\n  @Input() labels: DataTableTranslations;\n  @Input() selectOnRowClick = false;\n  @Input() autoReload = true;\n  @Input() showReloading = false;\n  @Input() noDataMessage: string;\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\n  @Input() primaryColumn = '';\n\n  // reload emitter\n  @Output() reload = new EventEmitter();\n\n  // event handlers:\n  @Output() rowClick = new EventEmitter();\n  @Output() rowDoubleClick = new EventEmitter();\n  @Output() headerClick = new EventEmitter();\n  @Output() cellClick = new EventEmitter();\n  @Output() selectedRowsChange = new EventEmitter();\n  @Output() visibleColumnsChange = new EventEmitter();\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // ada notifications.\n  reloadNotification: string;\n  paginationNotification: string;\n  sortNotification: string;\n  columnSelectorNotification: string;\n\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\n\n  subject = new Subject<void>();\n  subject$: Subscription;\n\n  notifier = new Subject<void>();\n  notifier$: Subscription;\n\n  // selection:\n  selectedRow: DataTableRowComponent;\n  selectedRows: DataTableRowComponent[] = [];\n\n  Math: any;\n  id = `datatable-${nextId++}`;\n\n  // select all checkbox flag\n  private _selectAllCheckbox = false;\n\n  // column resizing:\n  private _resizeInProgress = false;\n\n  resizeLimit = 30;\n\n  // Reloading:\n  _reloading = false;\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  set reloading(val: boolean) {\n    this._reloading = val;\n    this.notifier.next();\n  }\n\n  // UI state: visible get/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n\n  @Input()\n  get sortBy(): string {\n    return this._sortBy;\n  }\n\n  set sortBy(value: string) {\n    this._sortBy = value;\n    this.subject.next();\n  }\n\n  private _sortAsc = true;\n\n  @Input()\n  get sortAsc(): boolean {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value: boolean) {\n    this._sortAsc = value;\n    this.subject.next();\n  }\n\n  private _offset = 0;\n\n  @Input()\n  get offset(): number {\n    return this._offset;\n  }\n\n  set offset(value: number) {\n    this._offset = value;\n    this.subject.next();\n  }\n\n  private _limit = 10;\n\n  @Input()\n  get limit(): number {\n    return this._limit;\n  }\n\n  set limit(value: number) {\n    this._limit = value;\n    this.subject.next();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n\n    if (this.pageLimits.indexOf(this.limit) < 0) {\n      this.limit = this.pageLimits[0];\n    }\n\n    this.labels = {...defaultTranslations, ...this.labels};\n\n    if (this.autoReload) {\n      this.reloadItems();\n    }\n\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\n    this.subject$ = this.subject.pipe(debounceTime(100)).subscribe(() => this.reloadItems());\n\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  reloadItems() {\n    this.reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  private _onReloadFinished() {\n    if (this.reloading) {\n      this._updateDisplayParams();\n      this._selectAllCheckbox = false;\n      this.reloading = false;\n    }\n  }\n\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  constructor() {\n  }\n\n  public rowClicked(row: DataTableRowComponent, event: Event) {\n    this.rowClick.emit({row, event});\n  }\n\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\n    if (!this._resizeInProgress) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.headerClick.emit({column, event});\n    } else {\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  // functions:\n  private _getRemoteParameters(): DataTableParams {\n    const params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private sortColumn(column: DataTableColumnDirective) {\n    if (column.sortable) {\n\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n\n      if(column.property === this.sortBy &&  ! this.sortAsc) {\n        this.sort(undefined, true);\n        return;\n      }\n\n      this.sort(column.property, ascending);\n    }\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback>this.rowColors)(item, row, index);\n    }\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  onRowSelectChanged(row: DataTableRowComponent) {\n\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      const index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        delete this.selectedRow;\n      }\n    }\n\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  // other:\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams.limit - this.items.length});\n  }\n\n  public resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    let startOffset = columnElement.offsetWidth - event.pageX;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = startOffset + moveEvent.pageX + dx;\n        }\n      },\n    });\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement>columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\n      return false;\n    }\n    return true;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.primaryColumn === '') {\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\n    }\n  }\n\n  _notify(): void {\n    const loading = this.reloading;\n\n    this.reloadNotification = loading ?\n      this.labels.loadingText.replace('{title}', this.title) :\n      this.labels.loadedText.replace('{title}', this.title);\n\n    if (!loading) {\n      if (this.pagination) {\n        this.paginationNotification = this.labels.paginationText\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n          .replace('{total}', '' + this.itemCount);\n      } else {\n        this.paginationNotification = '';\n      }\n      if (this.columns !== undefined && this.sortBy !== undefined) {\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n          .replace('{title}', this.title)\n          .replace('{header}', col.header);\n      } else {\n        this.sortNotification = '';\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subject$.unsubscribe();\n    this.notifier$.unsubscribe();\n  }\n}\n","export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/*tslint:disable-next-line*/\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\n\n  const startX = event.pageX;\n  const startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(evt: MouseEvent) {\n    const dx = evt.pageX - x;\n    const dy = evt.pageY - y;\n    x = evt.pageX;\n    y = evt.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(evt, dx, dy, x, y);\n\n    event.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(evt: MouseEvent) {\n    x = evt.pageX;\n    y = evt.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(event, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n","<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.reloadItems()\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerReload.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (<HTMLInputElement> event.target).checked;\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.visibleColumnsChange.emit(event);\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n","<div class=\"row\">\n  <div class=\"pagination-range col\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"pagination-limit col-md-3\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n      </div>\n      <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n        <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"pagination-pages offset-md-3 col-md-6\">\n    <div class=\"pagination-page\">\n      <div class=\"input-group\">\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageFirst()\"\n                class=\"btn btn-default pagination-firstpage\"\n                [title]=\"dataTable.labels.firstPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n        </button>\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageBack()\"\n                class=\"btn btn-default pagination-prevpage\"\n                [title]=\"dataTable.labels.prevPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n        </button>\n\n        <div class=\"input-group-prepend d-sm-block d-none\">\n          <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n            {{ dataTable.labels.pageNumberLabel }}\n          </label>\n        </div>\n        <input #pageInput type=\"number\"\n               [id]=\"id + '-page-input'\"\n               class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n               [disabled]=\"dataTable.itemCount === 0\"\n               [ngModel]=\"page\"\n               (blur)=\"validate($event)\"\n               (keyup.enter)=\"validate($event)\"\n               (keyup.esc)=\"pageInput.value = page\"\n               [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n               [attr.aria-controls]=\"dataTable.id\"/>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n        </div>\n\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageForward()\"\n                class=\"btn btn-default pagination-nextpage\"\n                [title]=\"dataTable.labels.nextPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n        </button>\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageLast()\"\n                class=\"btn btn-default pagination-lastpage\"\n                [title]=\"dataTable.labels.lastPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput', { static: true }) pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset <= 0) {\n      this.pageInput.nativeElement.focus();\n    }\n}\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\n      event.target.value = this.page;\n    }\n  }\n}\n","// modules\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// utils\nimport { HideDirective } from './utils/hide';\nimport { MinPipe } from './utils/min';\nimport { PixelConverter } from './utils/px';\n// types & tools\nimport { DataTableTranslations } from './types/data-table-translations.type';\nimport { CellCallback } from './types/cell-callback.type';\nimport { RowCallback } from './types/row-callback.type';\nimport { DataTableResource } from './tools/data-table-resource';\nimport { DataTableParams } from './types/data-table-params.type';\n// components & directives\nimport { DataTableComponent } from './components/table/table.component';\nimport { DataTableRowComponent } from './components/row/row.component';\nimport { DataTableColumnDirective } from './directives/column/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\n\nexport {\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent, DataTableColumnDirective,\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n    PixelConverter, HideDirective, MinPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class NgxTableModule {\n  public static forRoot(): ModuleWithProviders<NgxTableModule> {\n    return {\n      ngModule: NgxTableModule,\n      providers: []\n    };\n  }\n}\n\n\n"]}