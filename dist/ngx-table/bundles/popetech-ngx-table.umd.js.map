{"version":3,"file":"popetech-ngx-table.umd.js","sources":["../../../projects/ngx-table/src/lib/utils/hide.ts","../../../projects/ngx-table/src/lib/utils/min.ts","../../../projects/ngx-table/src/lib/utils/px.ts","../../../projects/ngx-table/src/lib/tools/data-table-resource.ts","../../../projects/ngx-table/src/lib/directives/column/column.directive.ts","../../../projects/ngx-table/src/lib/components/row/row.component.html","../../../projects/ngx-table/src/lib/components/row/row.component.ts","../../../projects/ngx-table/src/lib/types/default-translations.type.ts","../../../projects/ngx-table/src/lib/utils/drag.ts","../../../projects/ngx-table/src/lib/components/pagination/pagination.component.html","../../../projects/ngx-table/src/lib/components/pagination/pagination.component.ts","../../../projects/ngx-table/src/lib/components/table/table.component.html","../../../projects/ngx-table/src/lib/components/table/table.component.ts","../../../projects/ngx-table/src/lib/components/header/header.component.html","../../../projects/ngx-table/src/lib/components/header/header.component.ts","../../../projects/ngx-table/src/lib/ngx-table.module.ts","../../../projects/ngx-table/src/popetech-ngx-table.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2\n} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[] = []): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n","import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n","import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  private styleClassObject = {}; // for [ngClass]\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n\n  @ContentChild('dataTableCell', { static: true }) cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader', { static: true }) headerTemplate: ElementRef;\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n","<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input\n           type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  templateUrl: './row.component.html',\n  styleUrls: ['./row.component.css']\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n\n  expanded: boolean;\n\n  private _listeners = [];\n\n  // row selection:\n  private _selected: boolean;\n\n  @Output() selectedChange = new EventEmitter();\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n","import { DataTableTranslations } from './data-table-translations.type';\n\nexport const defaultTranslations: DataTableTranslations = {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded'\n};\n","export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/*tslint:disable-next-line*/\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\n\n  const startX = event.pageX;\n  const startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(evt: MouseEvent) {\n    const dx = evt.pageX - x;\n    const dy = evt.pageY - y;\n    x = evt.pageX;\n    y = evt.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(evt, dx, dy, x, y);\n\n    event.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(evt: MouseEvent) {\n    x = evt.pageX;\n    y = evt.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(event, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n","<div class=\"row\">\n  <div class=\"pagination-range col\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"pagination-limit col-md-3\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n      </div>\n      <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n        <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"pagination-pages offset-md-3 col-md-6\">\n    <div class=\"pagination-page\">\n      <div class=\"input-group\">\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageFirst()\"\n                class=\"btn btn-default pagination-firstpage\"\n                [title]=\"dataTable.labels.firstPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">first page</span>\n        </button>\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageBack()\"\n                class=\"btn btn-default pagination-prevpage\"\n                [title]=\"dataTable.labels.prevPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">previous page</span>\n        </button>\n\n        <div class=\"input-group-prepend d-sm-block d-none\">\n          <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n            {{ dataTable.labels.pageNumberLabel }}\n          </label>\n        </div>\n        <input #pageInput type=\"number\"\n               [id]=\"id + '-page-input'\"\n               class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n               [disabled]=\"dataTable.itemCount === 0\"\n               [ngModel]=\"page\"\n               (blur)=\"validate($event)\"\n               (keyup.enter)=\"validate($event)\"\n               (keyup.esc)=\"pageInput.value = page\"\n               [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n               [attr.aria-controls]=\"dataTable.id\"/>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n        </div>\n\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageForward()\"\n                class=\"btn btn-default pagination-nextpage\"\n                [title]=\"dataTable.labels.nextPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">next page</span>\n        </button>\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageLast()\"\n                class=\"btn btn-default pagination-lastpage\"\n                [title]=\"dataTable.labels.lastPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">last page</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput', { static: true }) pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset <= 0) {\n      this.pageInput.nativeElement.focus();\n    }\n}\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\n      event.target.value = this.page;\n    }\n  }\n}\n","<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n\n  <div class=\"data-table-box\" [class]=\"wrapperClass\">\n    <table class=\"table data-table\" [id]=\"id\" tabindex=\"-1\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <label [for]=\"id + '-select-all-column'\" class=\"sr-only\">\n            {{ labels.selectAllRows }}\n          </label>\n          <input\n            [id]=\"id + '-select-all-column'\"\n            [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [id]=\"'col-'+id+'-'+i\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef, ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\nimport { DataTableRowComponent } from '../row/row.component';\nimport { DataTableParams } from '../../types/data-table-params.type';\nimport { RowCallback } from '../../types/row-callback.type';\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\nimport { defaultTranslations } from '../../types/default-translations.type';\nimport { drag } from '../../utils/drag';\n\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { DataTablePaginationComponent } from \"../pagination/pagination.component\";\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\n\n  private _items: any[] = [];\n  private _itemCount;\n\n  @Input() wrapperClass;\n\n  @Input()\n  get items(): any[] {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    // no need to call notifier.next() because _onReloadFinished()\n    // will change reloaded value causing notifier.next() to be called implicitly.\n    this._onReloadFinished();\n  }\n\n\n  @Input()\n  get itemCount(): number {\n    return this._itemCount;\n  }\n\n  set itemCount(count: number) {\n    this._itemCount = count;\n    this.notifier.next();\n  }\n\n  // UI components:\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\n\n  @ViewChild(DataTablePaginationComponent, {static: false}) paginator;\n\n  @ContentChild('dataTableExpand', { static: true }) expandTemplate: TemplateRef<any>;\n\n  // One-time optional bindings with default values:\n  @Input() title = '';\n  @Input() showTitle = true;\n  @Input() header = true;\n  @Input() pagination = true;\n  @Input() indexColumn = true;\n  @Input() indexColumnHeader = '';\n  @Input() rowColors: RowCallback;\n  @Input() rowTooltip: RowCallback;\n  @Input() selectColumn = false;\n  @Input() multiSelect = true;\n  @Input() substituteRows = true;\n  @Input() expandableRows = false;\n  @Input() labels: DataTableTranslations;\n  @Input() selectOnRowClick = false;\n  @Input() autoReload = true;\n  @Input() showReloading = false;\n  @Input() noDataMessage: string;\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\n  @Input() primaryColumn = '';\n\n  // reload emitter\n  @Output() reload = new EventEmitter();\n\n  // event handlers:\n  @Output() rowClick = new EventEmitter();\n  @Output() rowDoubleClick = new EventEmitter();\n  @Output() headerClick = new EventEmitter();\n  @Output() cellClick = new EventEmitter();\n  @Output() selectedRowsChange = new EventEmitter();\n  @Output() visibleColumnsChange = new EventEmitter();\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // ada notifications.\n  reloadNotification: string;\n  paginationNotification: string;\n  sortNotification: string;\n  columnSelectorNotification: string;\n\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\n\n  subject = new Subject<void>();\n  subject$: Subscription;\n\n  notifier = new Subject<void>();\n  notifier$: Subscription;\n\n  // selection:\n  selectedRow: DataTableRowComponent;\n  selectedRows: DataTableRowComponent[] = [];\n\n  Math: any;\n  id = `datatable-${nextId++}`;\n\n  // select all checkbox flag\n  private _selectAllCheckbox = false;\n\n  // column resizing:\n  private _resizeInProgress = false;\n\n  resizeLimit = 30;\n\n  // Reloading:\n  _reloading = false;\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  set reloading(val: boolean) {\n    this._reloading = val;\n    this.notifier.next();\n  }\n\n  // UI state: visible get/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n\n  @Input()\n  get sortBy(): string {\n    return this._sortBy;\n  }\n\n  set sortBy(value: string) {\n    this._sortBy = value;\n    this.subject.next();\n  }\n\n  private _sortAsc = true;\n\n  @Input()\n  get sortAsc(): boolean {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value: boolean) {\n    this._sortAsc = value;\n    this.subject.next();\n  }\n\n  private _offset = 0;\n\n  @Input()\n  get offset(): number {\n    return this._offset;\n  }\n\n  set offset(value: number) {\n    this._offset = value;\n    this.subject.next();\n  }\n\n  private _limit = 10;\n\n  @Input()\n  get limit(): number {\n    return this._limit;\n  }\n\n  set limit(value: number) {\n    this._limit = value;\n    this.subject.next();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n\n    if (this.pageLimits.indexOf(this.limit) < 0) {\n      this.limit = this.pageLimits[0];\n    }\n\n    this.labels = {...defaultTranslations, ...this.labels};\n\n    if (this.autoReload) {\n      this.reloadItems();\n    }\n\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\n    this.subject$ = this.subject.pipe(debounceTime(100)).subscribe(() => this.reloadItems());\n\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  reloadItems() {\n    this.reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  private _onReloadFinished() {\n    if (this.reloading) {\n      this._updateDisplayParams();\n      this._selectAllCheckbox = false;\n      this.reloading = false;\n    }\n  }\n\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  constructor() {\n  }\n\n  public rowClicked(row: DataTableRowComponent, event: Event) {\n    this.rowClick.emit({row, event});\n  }\n\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\n    if (!this._resizeInProgress) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.headerClick.emit({column, event});\n    } else {\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  // functions:\n  private _getRemoteParameters(): DataTableParams {\n    const params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private sortColumn(column: DataTableColumnDirective) {\n    if (column.sortable) {\n\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n\n      if(column.property === this.sortBy &&  ! this.sortAsc) {\n        this.sort(undefined, true);\n        return;\n      }\n\n      this.sort(column.property, ascending);\n    }\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback>this.rowColors)(item, row, index);\n    }\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  onRowSelectChanged(row: DataTableRowComponent) {\n\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      const index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        delete this.selectedRow;\n      }\n    }\n\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  // other:\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams.limit - this.items.length});\n  }\n\n  public resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    let startOffset = columnElement.offsetWidth - event.pageX;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = startOffset + moveEvent.pageX + dx;\n        }\n      },\n    });\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement>columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\n      return false;\n    }\n    return true;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.primaryColumn === '') {\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\n    }\n  }\n\n  _notify(): void {\n    const loading = this.reloading;\n\n    this.reloadNotification = loading ?\n      this.labels.loadingText.replace('{title}', this.title) :\n      this.labels.loadedText.replace('{title}', this.title);\n\n    if (!loading) {\n      if (this.pagination) {\n        this.paginationNotification = this.labels.paginationText\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n          .replace('{total}', '' + this.itemCount);\n      } else {\n        this.paginationNotification = '';\n      }\n      if (this.columns !== undefined && this.sortBy !== undefined) {\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n          .replace('{title}', this.title)\n          .replace('{header}', col.header);\n      } else {\n        this.sortNotification = '';\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subject$.unsubscribe();\n    this.notifier$.unsubscribe();\n  }\n}\n","<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.reloadItems()\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerReload.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (<HTMLInputElement> event.target).checked;\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.visibleColumnsChange.emit(event);\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n","// modules\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// utils\nimport { HideDirective } from './utils/hide';\nimport { MinPipe } from './utils/min';\nimport { PixelConverter } from './utils/px';\n// types & tools\nimport { DataTableTranslations } from './types/data-table-translations.type';\nimport { CellCallback } from './types/cell-callback.type';\nimport { RowCallback } from './types/row-callback.type';\nimport { DataTableResource } from './tools/data-table-resource';\nimport { DataTableParams } from './types/data-table-params.type';\n// components & directives\nimport { DataTableComponent } from './components/table/table.component';\nimport { DataTableRowComponent } from './components/row/row.component';\nimport { DataTableColumnDirective } from './directives/column/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\n\nexport {\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent, DataTableColumnDirective,\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n    PixelConverter, HideDirective, MinPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class NgxTableModule {\n  public static forRoot(): ModuleWithProviders<NgxTableModule> {\n    return {\n      ngModule: NgxTableModule,\n      providers: []\n    };\n  }\n}\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Directive","Input","Pipe","ContentChild","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵattribute","EventEmitter","forwardRef","i0.ɵɵlistener","i0.ɵɵclassProp","Component","Inject","Output","i0.ɵɵtext","i0.ɵɵtextInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate2","ViewChild","nextId","Subject","debounceTime","i0.ɵɵclassMap","ContentChildren","ViewChildren","HostListener","CommonModule","FormsModule","NgModule"],"mappings":"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"}